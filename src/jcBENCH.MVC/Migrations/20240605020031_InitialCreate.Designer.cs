// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using jcBENCH.MVC.DAL;

#nullable disable

namespace jcBENCH.MVC.Migrations
{
    [DbContext(typeof(MainDbContext))]
    [Migration("20240605020031_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("jcBENCH.MVC.DAL.Objects.Benchmarks", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Benchmarks");
                });

            modelBuilder.Entity("jcBENCH.MVC.DAL.Objects.Platforms", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Name");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("jcBENCH.MVC.DAL.Objects.Results", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("BenchmarkID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("BenchmarkResult")
                        .HasColumnType("integer");

                    b.Property<string>("CPUArchitecture")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CPUFrequency")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CPUManufacturer")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CPUName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("OperatingSystem")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlatformID")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BenchmarkID");

                    b.HasIndex("PlatformID");

                    b.ToTable("BenchmarkResults");
                });

            modelBuilder.Entity("jcBENCH.MVC.DAL.Objects.Results", b =>
                {
                    b.HasOne("jcBENCH.MVC.DAL.Objects.Benchmarks", "Benchmark")
                        .WithMany()
                        .HasForeignKey("BenchmarkID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("jcBENCH.MVC.DAL.Objects.Platforms", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Benchmark");

                    b.Navigation("Platform");
                });
#pragma warning restore 612, 618
        }
    }
}
